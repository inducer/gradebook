#! /usr/bin/env python
from datetime import date

from optparse import OptionParser

from vt100 import c


parser = OptionParser(usage="usage: %prog [options] COURSE_ID PROCESS_ID,PROCESS_ID")
parser.add_option("-c", "--credit-only",
                  action="store_true")

(options, args) = parser.parse_args()

if len(args) < 2:
    parser.print_usage()
    import sys
    sys.exit(1)

course_id, process_ids = args

process_ids = [int(i) for i in process_ids.split(",")]

# {{{ boilerplate

from camelot.core.orm import Session
import os, sys
sys.path.append(os.environ["GRADEBOOK_ROOT"])
import main

from camelot.core.conf import settings
settings.setup_model()

# }}}

session = Session()

from gradebook.model import (Student,
        ProcessStateChange as PSC)

qry = session.query(Student)

qry = qry.order_by(Student.user_name)

for student in qry:
    process = list(session.query(PSC)
            .filter(PSC.student == student)
            .order_by(PSC.timestamp))

    process = [
            psc for psc in process
            if psc.process_id in process_ids]

    if not process:
        if options.credit_only and student.kind != "credit":
            continue

    print "%s%s, %s%s (%s)" % (c("purple"),
            student.last_name, student.first_name,
            c("normal"), student.user_name, )
    for psc in process:
        print "    %s %s (%s): %s" % (
                psc.process.name, psc.new_state, psc.timestamp,
                psc.remark)
